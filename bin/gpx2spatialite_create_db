#!/usr/bin/env python
#-*- coding:utf-8 -*-

import sys
from optparse import OptionParser
import re
import gpx2spatialite as g2s


def parseargs():
    usage = "usage: %prog /path/to/new/database.sqlite"
    optparser = OptionParser(usage, version="%prog 0.1")
    (_, args) = optparser.parse_args()
    if len(args) != 1:
        error = "Specify the new database path"
        optparser.error(error)
        sys.exit(2)

    return args[0]


def main():
    new_db = parseargs()

    create_db_script = g2s.get_data("sql/create_db.sql")
    insert_citydefs_script = g2s.get_data("sql/insert_citydefs.sql")

    conn = g2s.get_connection(new_db)
    cursor = conn.cursor()

    result = cursor.execute('SELECT spatialite_version()')
    spatialite_version = result.fetchone()[0]

    def versionstring2list(v):
        return [int(x) for x in re.sub(r'(\.0+)*$', '', v).split(".")]

    if cmp(versionstring2list(spatialite_version), [4, 1]) == -1:
        cursor.execute('SELECT InitSpatialMetaData()')
    else:
        cursor.execute('SELECT InitSpatialMetaData(1)')

    create_db_query = open(create_db_script, 'r').read()
    cursor.executescript(create_db_query)
    conn.commit()

    insert_citydefs_query = open(insert_citydefs_script, 'r').read()
    cursor.executescript(insert_citydefs_query)
    conn.commit()

    cursor.close()
    conn.close()


if __name__ == '__main__':
    sys.exit(main())
